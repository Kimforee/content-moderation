version: '3.8'

services:
  app:
    build: .
    container_name: moderation_api
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - rabbitmq
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app

  celery_worker:
    build: .
    container_name: celery_worker
    command: poetry run celery -A app.config.celery worker --loglevel=info
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - .:/app

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management interface port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"

  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: moderation
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: redis_cache
    ports:
      - "6379:6379"

volumes:
  postgres_data: